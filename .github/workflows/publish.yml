name: Publish
on:
    workflow_dispatch:
        inputs:
            notest:
                description: "Skip (Test & Fix Problems)"
                required: false
                default: true
                type: boolean
            nobumpversion:
                description: "Skip (Bump version)"
                required: false
                default: true
                type: boolean
            bumpversion:
                type: choice
                description: "Bump version"
                required: true
                options:
                    - patch
                    - minor
                    - major
            deploy_web:
                description: "Deploy Web"
                required: false
                default: false
                type: boolean
            deploy_package:
                description: "Deploy Package"
                required: false
                default: false
                type: boolean

jobs:
    test:
        name: Test & Fix Problems!
        runs-on: ubuntu-latest
        if: ${{ github.event.inputs.notest == 'false' }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Cache Bun dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.bun/install/cache
                  key: ${{ runner.os }}-bun-cache-${{ hashFiles('**/package.json', '**/bun.lockb') }}

            - name: Setup Bun
              uses: oven-sh/setup-bun@v2
              with:
                  bun-version-file: "package.json"

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ vars.NODE_VERSION }}

            - name: Install Dependencies
              run: bun install --verbose

            - name: Run ESLint
              run: bun run fix

            - name: Automatically Commit Changed
              uses: stefanzweifel/git-auto-commit-action@v6
              with:
                  push_options: "--force"
                  commit_options: "--no-verify"
                  commit_message: "chore(eslint): fix problems"
                  skip_checkout: true

    bumpversion:
        name: Bump Version
        needs: [test]
        runs-on: ubuntu-latest
        outputs:
            outversion: ${{ steps.package.outputs.version }}
        if: always() && github.event.inputs.nobumpversion == 'false' && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled')
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Cache Bun dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.bun/install/cache
                  key: ${{ runner.os }}-bun-cache-${{ hashFiles('**/package.json', '**/bun.lockb') }}

            - name: Setup Bun
              uses: oven-sh/setup-bun@v2
              with:
                  bun-version-file: "package.json"

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ vars.NODE_VERSION }}

            - name: Install Dependencies
              run: bun install --verbose --ignore-scripts --global @jsdevtools/version-bump-prompt conventional-changelog-cli

            - name: Bump Version
              id: bumpversion
              run: bun bump ${{ github.event.inputs.bumpversion }}

            - name: Update Changelog
              run: bun run changelog:generate

            - name: Get Version
              id: package
              if: steps.bumpversion.outcome == 'success'
              uses: Saionaro/extract-package-version@v1.3.0

            - name: Automatically Commit Changed
              if: steps.package.outcome == 'success'
              uses: stefanzweifel/git-auto-commit-action@v6
              with:
                  push_options: "--force"
                  commit_options: "--no-verify"
                  tagging_message: "v${{ steps.package.outputs.version }}"
                  commit_message: "chore(release): publish v${{ steps.package.outputs.version }}"
                  skip_checkout: true

    deploy_package:
        name: Publish Package
        needs: [bumpversion]
        runs-on: ubuntu-latest
        if: always() && github.event.inputs.deploy_package == 'true' && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled')
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.ref }}

            - name: Cache Bun dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.bun/install/cache
                  key: ${{ runner.os }}-bun-cache-${{ hashFiles('**/package.json', '**/bun.lockb') }}

            - name: Setup PNPM
              uses: pnpm/action-setup@v4
              with:
                  run_install: false
                  version: ${{ vars.PNPM_VERSION }}

            - name: Setup Bun
              uses: oven-sh/setup-bun@v2
              with:
                  bun-version-file: "package.json"

            - name: Setup Configure
              run: |
                  # Setup .npmrc
                  echo "always-auth=true" >> .npmrc
                  echo "git-checks=false" >> .npmrc
                  echo "publish-branch=production" >> .npmrc
                  echo "auto-install-peers=true" >> .npmrc

                  # Configure pnpm-workspace.yaml
                  echo -e "packages:\n    - \"apps/**\"\n    - \"packages/**\"" > pnpm-workspace.yaml

            - name: Install Dependencies
              run: bun install --verbose

            - name: Clean package.json
              run: |
                  npm pkg delete packageManager
                  pnpm --filter=@mofunetive/* pkg delete scripts

            - name: Setup Configuration
              run: |
                  pnpm config set 'always-auth' "true"

            - name: Deploy to npmjs
              run: |
                  pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
                  pnpm --filter=@mofunetive/* publish -r --access=public --registry=https://registry.npmjs.org/
                  pnpm config delete '//registry.npmjs.org/:_authToken'
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Deploy to GitHub Packages
              run: |
                  pnpm config set '//npm.pkg.github.com/:_authToken' "${NODE_AUTH_TOKEN}"
                  pnpm --filter=@mofunetive/* publish -r --access=public --registry=https://npm.pkg.github.com/
                  pnpm config delete '//npm.pkg.github.com/:_authToken'
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}

    deploy_website:
        name: Publish WebSite
        needs: [bumpversion]
        runs-on: ubuntu-latest
        if: always() && github.event.inputs.deploy_web == 'true' && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled')
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.ref }}

            - name: Deploy to Vercel
              uses: amondnet/vercel-action@v25
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
                  vercel-args: "--prod"
                  vercel-org-id: ${{ secrets.ORG_ID }}
                  vercel-project-id: ${{ secrets.PROJECT_ID }}
